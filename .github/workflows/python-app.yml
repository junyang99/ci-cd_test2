name: Python application tests with database

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: 'HR Portal'
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -P 3306 --silent"
          --health-interval=10s
          --health-timeout=10s
          --health-retries=5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install flask_testing
        if [ -f requirement.txt ]; then pip install -r requirement.txt; fi
    - name: Wait for MySQL
      run: |
        until mysqladmin ping -h 127.0.0.1 -P 3306 --silent; do
          echo 'waiting for mysqld to be connectable...'
          sleep 2
        done
    - name: Create actual database
      env:
        MYSQL_PWD: root
      run: mysql -uroot -h127.0.0.1 --execute="-- Drop HR Portal database if it exists
DROP DATABASE IF EXISTS `HR Portal`;

-- Create the HR Portal database if it doesn't exist
CREATE DATABASE IF NOT EXISTS `HR Portal`;

-- Use the HR Portal database
USE `HR Portal`;

-- Create the Role table
CREATE TABLE IF NOT EXISTS Role (
    Role_Name VARCHAR(20) PRIMARY KEY,
    Role_Desc TEXT,
    Department VARCHAR(50)
);


-- Create the Skill table
CREATE TABLE IF NOT EXISTS Skill (
    Skill_Name VARCHAR(50) PRIMARY KEY,
    Skill_Desc TEXT
);

-- Create the Access_Control table
CREATE TABLE IF NOT EXISTS Access_Control (
    Access_ID INT PRIMARY KEY,
    Access_Control_Name VARCHAR(20)
);

-- Create the Staff table
CREATE TABLE IF NOT EXISTS Staff (
    Staff_ID INT PRIMARY KEY,
    Staff_FName VARCHAR(50) NOT NULL,
    Staff_LName VARCHAR(50) NOT NULL,
    Dept VARCHAR(50) NOT NULL,
    Country VARCHAR(50) NOT NULL,
    Email VARCHAR(50) NOT NULL,
    Access_ID INT,
    FOREIGN KEY (Access_ID) REFERENCES Access_Control(Access_ID)
);

-- Create the Role_Skill table
CREATE TABLE IF NOT EXISTS Role_Skill (
    Role_Name VARCHAR(20),
    Skill_Name VARCHAR(50),
    PRIMARY KEY (Role_Name, Skill_Name),
    FOREIGN KEY (Role_Name) REFERENCES Role(Role_Name),
    FOREIGN KEY (Skill_Name) REFERENCES Skill(Skill_Name)
);

-- Create the Staff_Skill table
CREATE TABLE IF NOT EXISTS Staff_Skill (
    Staff_ID INT,
    Skill_Name VARCHAR(50),
    PRIMARY KEY (Staff_ID, Skill_Name),
    FOREIGN KEY (Staff_ID) REFERENCES Staff(Staff_ID),
    FOREIGN KEY (Skill_Name) REFERENCES Skill(Skill_Name)
);

-- Create the Open_Position table
CREATE TABLE IF NOT EXISTS Open_Position (
    Position_ID INT AUTO_INCREMENT,
    Role_Name VARCHAR(20) NOT NULL,
    Starting_Date DATE,
    Ending_Date DATE,
    PRIMARY KEY (Position_ID),
    FOREIGN KEY (Role_Name) REFERENCES Role(Role_Name)
);

-- Create the Application table
CREATE TABLE IF NOT EXISTS Application (
    Application_ID INT AUTO_INCREMENT,
    Position_ID INT NOT NULL,
    Staff_ID INT NOT NULL,
    Application_Date DATE NOT NULL,
    Cover_Letter TEXT,
    Application_Status INT NOT NULL,
    PRIMARY KEY (Application_ID),
    FOREIGN KEY (Staff_ID) REFERENCES Staff(Staff_ID),
    FOREIGN KEY (Position_ID) REFERENCES Open_Position(Position_ID)
);
"
    - name: Import database schema
      env:
        MYSQL_PWD: root
      run: mysql -h 127.0.0.1 -P 3306 -u root -proot -D 'HR Portal' -e "SELECT * FROM HR Portal;"
    - name: Import CSV data
      run: |
        mysqlimport --ignore-lines=1 --fields-terminated-by=, --local -uroot -proot -h127.0.0.1 \`HR Portal\` db/sample_data/access_control.csv
        mysqlimport --ignore-lines=1 --fields-terminated-by=, --local -uroot -proot -h127.0.0.1 \`HR Portal\` db/sample_data/skill.csv
        mysqlimport --ignore-lines=1 --fields-terminated-by=, --local -uroot -proot -h127.0.0.1 \`HR Portal\` db/sample_data/staff.csv
        mysqlimport --ignore-lines=1 --fields-terminated-by=, --local -uroot -proot -h127.0.0.1 \`HR Portal\` db/sample_data/role.csv
        mysqlimport --ignore-lines=1 --fields-terminated-by=, --local -uroot -proot -h127.0.0.1 \`HR Portal\` db/sample_data/open_position.csv
        mysqlimport --ignore-lines=1 --fields-terminated-by=, --local -uroot -proot -h127.0.0.1 \`HR Portal\` db/sample_data/staff_skill.csv
        mysqlimport --ignore-lines=1 --fields-terminated-by=, --local -uroot -proot -h127.0.0.1 \`HR Portal\` db/sample_data/role_skill.csv
        mysqlimport --ignore-lines=1 --fields-terminated-by=, --local -uroot -proot -h127.0.0.1 \`HR Portal\` db/sample_data/application.csv
    - name: Run unittest
      env:
        MYSQL_USER: root
        MYSQL_PASSWORD: root
        MYSQL_DATABASE: 'HR Portal'
      run: |
        python -m unittest discover -s ./utils -p '*_test.py'
        working-directory: ${{github.workspace}}


      #old  
# # This workflow will install Python dependencies, run tests and lint with a single version of Python
# # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

# name: Python application

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# permissions:
#   contents: read

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     services:
#       mysql:
#         image: mysql:5.7
#         env:
#           MYSQL_ROOT_PASSWORD: root
#           MYSQL_DATABASE: HR Portal

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up Python 3.10
#       uses: actions/setup-python@v3
#       with:
#         python-version: "3.10"
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest
#         sudo apt-get update
#         sudo apt-get install -y mysql-client
#         if [ -f requirement.txt ]; then pip install -r requirement.txt; fi
#     - name: Run unittest
#       run: |
#         python -m unittest discover -s ./utils -p '*_test.py'
